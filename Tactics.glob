DIGEST d036bd3a643d3d1e7fcec213d3266346
FLF.Tactics
R698:702 LF.Lists <> <> lib
R728:731 LF.Poly <> <> lib
prf 1008:1013 <> silly1
R1031:1033 Coq.Init.Datatypes <> nat ind
binder 1025:1025 <> n:1
binder 1027:1027 <> m:2
R1044:1049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1040:1042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1039:1039 LF.Tactics <> n:1 var
R1043:1043 LF.Tactics <> m:2 var
R1051:1053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1050:1050 LF.Tactics <> n:1 var
R1054:1054 LF.Tactics <> m:2 var
prf 1571:1576 <> silly2
R1598:1600 Coq.Init.Datatypes <> nat ind
binder 1588:1588 <> n:3
binder 1590:1590 <> m:4
binder 1592:1592 <> o:5
binder 1594:1594 <> p:6
R1611:1616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1607:1609 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1606:1606 LF.Tactics <> n:3 var
R1610:1610 LF.Tactics <> m:4 var
R1617:1617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1640:1646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1623:1626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1619:1621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1618:1618 LF.Tactics <> n:3 var
R1622:1622 LF.Tactics <> m:4 var
R1632:1634 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1627:1627 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1629:1629 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1631:1631 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Tactics <> n:3 var
R1630:1630 LF.Tactics <> o:5 var
R1635:1635 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1637:1637 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1639:1639 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1636:1636 LF.Tactics <> m:4 var
R1638:1638 LF.Tactics <> p:6 var
R1652:1654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1647:1647 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1648:1648 LF.Tactics <> n:3 var
R1650:1650 LF.Tactics <> o:5 var
R1655:1655 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1657:1657 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1659:1659 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1656:1656 LF.Tactics <> m:4 var
R1658:1658 LF.Tactics <> p:6 var
prf 2193:2199 <> silly2a
R2217:2219 Coq.Init.Datatypes <> nat ind
binder 2211:2211 <> n:7
binder 2213:2213 <> m:8
R2238:2244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2230:2232 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2225:2225 LF.Poly <> :::'('_x_','_x_')' not
R2227:2227 LF.Poly <> :::'('_x_','_x_')' not
R2229:2229 LF.Poly <> :::'('_x_','_x_')' not
R2226:2226 LF.Tactics <> n:7 var
R2228:2228 LF.Tactics <> n:7 var
R2233:2233 LF.Poly <> :::'('_x_','_x_')' not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2234:2234 LF.Tactics <> m:8 var
R2236:2236 LF.Tactics <> m:8 var
R2245:2245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2292:2298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2260:2262 Coq.Init.Datatypes <> nat ind
binder 2254:2254 <> q:9
binder 2256:2256 <> r:10
R2279:2282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2266:2266 LF.Poly <> :::'('_x_','_x_')' not
R2268:2268 LF.Poly <> :::'('_x_','_x_')' not
R2270:2270 LF.Poly <> :::'('_x_','_x_')' not
R2267:2267 LF.Tactics <> q:9 var
R2269:2269 LF.Tactics <> q:9 var
R2274:2274 LF.Poly <> :::'('_x_','_x_')' not
R2276:2276 LF.Poly <> :::'('_x_','_x_')' not
R2278:2278 LF.Poly <> :::'('_x_','_x_')' not
R2275:2275 LF.Tactics <> r:10 var
R2277:2277 LF.Tactics <> r:10 var
R2286:2288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2283:2283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2285:2285 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2284:2284 LF.Tactics <> q:9 var
R2289:2289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2291:2291 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2290:2290 LF.Tactics <> r:10 var
R2302:2304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2299:2299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2300:2300 LF.Tactics <> n:7 var
R2305:2305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2306:2306 LF.Tactics <> m:8 var
prf 2506:2513 <> silly_ex
binder 2524:2524 <> p:11
R2529:2529 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2575:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2537:2537 <> n:12
R2553:2556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2546:2548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2540:2543 LF.Basics <> even def
R2545:2545 LF.Tactics <> n:12 var
R2549:2552 LF.Basics <> true constr
R2567:2569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2557:2560 LF.Basics <> even def
R2563:2563 Coq.Init.Datatypes <> S constr
R2565:2565 LF.Tactics <> n:12 var
R2570:2574 LF.Basics <> false constr
R2582:2582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2623:2629 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2590:2590 <> n:13
R2607:2610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2599:2601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2593:2596 LF.Basics <> even def
R2598:2598 LF.Tactics <> n:13 var
R2602:2606 LF.Basics <> false constr
R2616:2618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2611:2613 LF.Basics <> odd def
R2615:2615 LF.Tactics <> n:13 var
R2619:2622 LF.Basics <> true constr
R2643:2648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2636:2638 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2630:2633 LF.Basics <> even def
R2635:2635 LF.Tactics <> p:11 var
R2639:2642 LF.Basics <> true constr
R2658:2660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2649:2651 LF.Basics <> odd def
R2654:2654 Coq.Init.Datatypes <> S constr
R2656:2656 LF.Tactics <> p:11 var
R2661:2664 LF.Basics <> true constr
prf 3003:3008 <> silly3
R3026:3028 Coq.Init.Datatypes <> nat ind
binder 3020:3020 <> n:14
binder 3022:3022 <> m:15
R3039:3044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3035:3037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3034:3034 LF.Tactics <> n:14 var
R3038:3038 LF.Tactics <> m:15 var
R3046:3048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3045:3045 LF.Tactics <> m:15 var
R3049:3049 LF.Tactics <> n:14 var
prf 3662:3674 <> rev_exercise1
R3693:3696 LF.Poly <> list ind
R3698:3700 Coq.Init.Datatypes <> nat ind
binder 3686:3686 <> l:16
binder 3688:3689 <> l':17
R3716:3721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3707:3709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3706:3706 LF.Tactics <> l:16 var
R3710:3712 LF.Poly <> rev def
R3714:3715 LF.Tactics <> l':17 var
R3724:3726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3722:3723 LF.Tactics <> l':17 var
R3727:3729 LF.Poly <> rev def
R3731:3731 LF.Tactics <> l:16 var
R3807:3820 LF.Poly <> rev_involutive thm
R3807:3820 LF.Poly <> rev_involutive thm
def 4298:4313 <> trans_eq_example
R4339:4341 Coq.Init.Datatypes <> nat ind
binder 4325:4325 <> a:18
binder 4327:4327 <> b:19
binder 4329:4329 <> c:20
binder 4331:4331 <> d:21
binder 4333:4333 <> e:22
binder 4335:4335 <> f:23
R4363:4371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4355:4357 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4350:4350 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4352:4352 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4354:4354 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4351:4351 LF.Tactics <> a:18 var
R4353:4353 LF.Tactics <> b:19 var
R4358:4358 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4360:4360 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4362:4362 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4359:4359 LF.Tactics <> c:20 var
R4361:4361 LF.Tactics <> d:21 var
R4385:4393 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4377:4379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4372:4372 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4374:4374 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4376:4376 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4373:4373 LF.Tactics <> c:20 var
R4375:4375 LF.Tactics <> d:21 var
R4380:4380 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4382:4382 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4384:4384 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4381:4381 LF.Tactics <> e:22 var
R4383:4383 LF.Tactics <> f:23 var
R4399:4401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4394:4394 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4396:4396 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4398:4398 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4395:4395 LF.Tactics <> a:18 var
R4397:4397 LF.Tactics <> b:19 var
R4402:4402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4404:4404 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4406:4406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4403:4403 LF.Tactics <> e:22 var
R4405:4405 LF.Tactics <> f:23 var
prf 4649:4656 <> trans_eq
binder 4668:4668 <> X:24
R4685:4685 LF.Tactics <> X:24 var
binder 4677:4677 <> x:25
binder 4679:4679 <> y:26
binder 4681:4681 <> z:27
R4696:4699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4692:4694 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4691:4691 LF.Tactics <> x:25 var
R4695:4695 LF.Tactics <> y:26 var
R4705:4708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4701:4703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4700:4700 LF.Tactics <> y:26 var
R4704:4704 LF.Tactics <> z:27 var
R4710:4712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4709:4709 LF.Tactics <> x:25 var
R4713:4713 LF.Tactics <> z:27 var
def 4968:4984 <> trans_eq_example'
R5010:5012 Coq.Init.Datatypes <> nat ind
binder 4996:4996 <> a:28
binder 4998:4998 <> b:29
binder 5000:5000 <> c:30
binder 5002:5002 <> d:31
binder 5004:5004 <> e:32
binder 5006:5006 <> f:33
R5034:5042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5026:5028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5021:5021 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5023:5023 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5025:5025 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5022:5022 LF.Tactics <> a:28 var
R5024:5024 LF.Tactics <> b:29 var
R5029:5029 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5031:5031 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5033:5033 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5030:5030 LF.Tactics <> c:30 var
R5032:5032 LF.Tactics <> d:31 var
R5056:5064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5048:5050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5043:5043 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5045:5045 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5047:5047 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5044:5044 LF.Tactics <> c:30 var
R5046:5046 LF.Tactics <> d:31 var
R5051:5051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5053:5053 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5055:5055 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5052:5052 LF.Tactics <> e:32 var
R5054:5054 LF.Tactics <> f:33 var
R5070:5072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5065:5065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5067:5067 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5069:5069 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5066:5066 LF.Tactics <> a:28 var
R5068:5068 LF.Tactics <> b:29 var
R5073:5073 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5075:5075 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5077:5077 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5074:5074 LF.Tactics <> e:32 var
R5076:5076 LF.Tactics <> f:33 var
R5550:5550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5552:5552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5554:5554 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5532:5539 LF.Tactics <> trans_eq thm
R5550:5550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5552:5552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5554:5554 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5532:5539 LF.Tactics <> trans_eq thm
def 6034:6051 <> trans_eq_example''
R6077:6079 Coq.Init.Datatypes <> nat ind
binder 6063:6063 <> a:34
binder 6065:6065 <> b:35
binder 6067:6067 <> c:36
binder 6069:6069 <> d:37
binder 6071:6071 <> e:38
binder 6073:6073 <> f:39
R6101:6109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6093:6095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6088:6088 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6090:6090 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6092:6092 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6089:6089 LF.Tactics <> a:34 var
R6091:6091 LF.Tactics <> b:35 var
R6096:6096 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6098:6098 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6100:6100 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6097:6097 LF.Tactics <> c:36 var
R6099:6099 LF.Tactics <> d:37 var
R6123:6131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6115:6117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6110:6110 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6112:6112 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6114:6114 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6111:6111 LF.Tactics <> c:36 var
R6113:6113 LF.Tactics <> d:37 var
R6118:6118 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6120:6120 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6122:6122 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Tactics <> e:38 var
R6121:6121 LF.Tactics <> f:39 var
R6137:6139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6132:6132 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6134:6134 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6136:6136 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6133:6133 LF.Tactics <> a:34 var
R6135:6135 LF.Tactics <> b:35 var
R6140:6140 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6142:6142 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6144:6144 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6141:6141 LF.Tactics <> e:38 var
R6143:6143 LF.Tactics <> f:39 var
R6199:6199 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6201:6201 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6203:6203 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6199:6199 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6201:6201 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6203:6203 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6316:6332 <> trans_eq_exercise
R6354:6356 Coq.Init.Datatypes <> nat ind
binder 6344:6344 <> n:40
binder 6346:6346 <> m:41
binder 6348:6348 <> o:42
binder 6350:6350 <> p:43
R6381:6389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6366:6369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6380:6380 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6365:6365 LF.Tactics <> m:41 var
R6370:6377 LF.Basics <> minustwo def
R6379:6379 LF.Tactics <> o:42 var
R6401:6409 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6390:6390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6396:6399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6392:6394 LF.Basics <> ::nat_scope:x_'+'_x not
R6391:6391 LF.Tactics <> n:40 var
R6395:6395 LF.Tactics <> p:43 var
R6400:6400 LF.Tactics <> m:41 var
R6410:6410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6416:6420 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6431:6431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6412:6414 LF.Basics <> ::nat_scope:x_'+'_x not
R6411:6411 LF.Tactics <> n:40 var
R6415:6415 LF.Tactics <> p:43 var
R6421:6428 LF.Basics <> minustwo def
R6430:6430 LF.Tactics <> o:42 var
R6472:6479 LF.Tactics <> trans_eq thm
R6472:6479 LF.Tactics <> trans_eq thm
prf 7853:7863 <> S_injective
R7881:7883 Coq.Init.Datatypes <> nat ind
binder 7875:7875 <> n:44
binder 7877:7877 <> m:45
R7898:7903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7892:7894 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7889:7889 Coq.Init.Datatypes <> S constr
R7891:7891 LF.Tactics <> n:44 var
R7895:7895 Coq.Init.Datatypes <> S constr
R7897:7897 LF.Tactics <> m:45 var
R7905:7907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7904:7904 LF.Tactics <> n:44 var
R7908:7908 LF.Tactics <> m:45 var
R7950:7952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7953:7956 Coq.Init.Peano <> pred abbrev
R7959:7959 Coq.Init.Datatypes <> S constr
R7950:7952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7953:7956 Coq.Init.Peano <> pred abbrev
R7959:7959 Coq.Init.Datatypes <> S constr
prf 8448:8459 <> S_injective'
R8477:8479 Coq.Init.Datatypes <> nat ind
binder 8471:8471 <> n:46
binder 8473:8473 <> m:47
R8494:8499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8488:8490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8485:8485 Coq.Init.Datatypes <> S constr
R8487:8487 LF.Tactics <> n:46 var
R8491:8491 Coq.Init.Datatypes <> S constr
R8493:8493 LF.Tactics <> m:47 var
R8501:8503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8500:8500 LF.Tactics <> n:46 var
R8504:8504 LF.Tactics <> m:47 var
prf 9008:9020 <> injection_ex1
R9040:9042 Coq.Init.Datatypes <> nat ind
binder 9032:9032 <> n:48
binder 9034:9034 <> m:49
binder 9036:9036 <> o:50
R9061:9066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9053:9055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9048:9048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9050:9050 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9052:9052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9049:9049 LF.Tactics <> n:48 var
R9051:9051 LF.Tactics <> m:49 var
R9056:9056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9058:9058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9060:9060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9057:9057 LF.Tactics <> o:50 var
R9059:9059 LF.Tactics <> o:50 var
R9068:9070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9067:9067 LF.Tactics <> n:48 var
R9071:9071 LF.Tactics <> m:49 var
def 9256:9268 <> injection_ex3
binder 9280:9280 <> X:51
R9299:9299 LF.Tactics <> X:51 var
binder 9291:9291 <> x:52
binder 9293:9293 <> y:53
binder 9295:9295 <> z:54
R9309:9312 LF.Poly <> list ind
R9314:9314 LF.Tactics <> X:51 var
binder 9303:9303 <> l:55
binder 9305:9305 <> j:56
R9340:9345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9331:9333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9321:9324 LF.Poly <> :::x_'::'_x not
R9320:9320 LF.Tactics <> x:52 var
R9326:9329 LF.Poly <> :::x_'::'_x not
R9325:9325 LF.Tactics <> y:53 var
R9330:9330 LF.Tactics <> l:55 var
R9335:9338 LF.Poly <> :::x_'::'_x not
R9334:9334 LF.Tactics <> z:54 var
R9339:9339 LF.Tactics <> j:56 var
R9356:9361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9347:9349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9346:9346 LF.Tactics <> j:56 var
R9351:9354 LF.Poly <> :::x_'::'_x not
R9350:9350 LF.Tactics <> z:54 var
R9355:9355 LF.Tactics <> l:55 var
R9363:9365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9362:9362 LF.Tactics <> x:52 var
R9366:9366 LF.Tactics <> y:53 var
prf 10233:10248 <> discriminate_ex1
R10266:10268 Coq.Init.Datatypes <> nat ind
binder 10260:10260 <> n:57
binder 10262:10262 <> m:58
R10286:10291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10279:10281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10274:10278 LF.Basics <> false constr
R10282:10285 LF.Basics <> true constr
R10293:10295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10292:10292 LF.Tactics <> n:57 var
R10296:10296 LF.Tactics <> m:58 var
prf 10362:10377 <> discriminate_ex2
R10393:10395 Coq.Init.Datatypes <> nat ind
binder 10389:10389 <> n:59
R10408:10413 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10404:10406 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10401:10401 Coq.Init.Datatypes <> S constr
R10403:10403 LF.Tactics <> n:59 var
R10407:10407 Coq.Init.Datatypes <> O constr
R10419:10421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10415:10417 LF.Basics <> ::nat_scope:x_'+'_x not
def 11245:11260 <> discriminate_ex3
binder 11274:11274 <> X:60
R11293:11293 LF.Tactics <> X:60 var
binder 11285:11285 <> x:61
binder 11287:11287 <> y:62
binder 11289:11289 <> z:63
R11303:11306 LF.Poly <> list ind
R11308:11308 LF.Tactics <> X:60 var
binder 11297:11297 <> l:64
binder 11299:11299 <> j:65
R11332:11339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11327:11329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11317:11320 LF.Poly <> :::x_'::'_x not
R11316:11316 LF.Tactics <> x:61 var
R11322:11325 LF.Poly <> :::x_'::'_x not
R11321:11321 LF.Tactics <> y:62 var
R11326:11326 LF.Tactics <> l:64 var
R11330:11331 LF.Poly <> :::'['_']' not
R11341:11343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11340:11340 LF.Tactics <> x:61 var
R11344:11344 LF.Tactics <> z:63 var
prf 11612:11618 <> eqb_0_l
binder 11629:11629 <> n:66
R11648:11651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11641:11643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11636:11639 LF.Basics <> ::nat_scope:x_'=?'_x not
R11640:11640 LF.Tactics <> n:66 var
R11644:11647 LF.Basics <> true constr
R11653:11655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11652:11652 LF.Tactics <> n:66 var
prf 12538:12544 <> f_equal
binder 12556:12556 <> A:67
binder 12558:12558 <> B:68
R12573:12576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12572:12572 LF.Tactics <> A:67 var
R12577:12577 LF.Tactics <> B:68 var
binder 12569:12569 <> f:69
R12586:12586 LF.Tactics <> A:67 var
binder 12581:12581 <> x:70
binder 12583:12583 <> y:71
R12597:12600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12593:12595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12592:12592 LF.Tactics <> x:70 var
R12596:12596 LF.Tactics <> y:71 var
R12604:12606 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12601:12601 LF.Tactics <> f:69 var
R12603:12603 LF.Tactics <> x:70 var
R12607:12607 LF.Tactics <> f:69 var
R12609:12609 LF.Tactics <> y:71 var
prf 12681:12701 <> eq_implies_succ_equal
R12719:12721 Coq.Init.Datatypes <> nat ind
binder 12713:12713 <> n:72
binder 12715:12715 <> m:73
R12732:12735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12728:12730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12727:12727 LF.Tactics <> n:72 var
R12731:12731 LF.Tactics <> m:73 var
R12739:12741 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12736:12736 Coq.Init.Datatypes <> S constr
R12738:12738 LF.Tactics <> n:72 var
R12742:12742 Coq.Init.Datatypes <> S constr
R12744:12744 LF.Tactics <> m:73 var
R12774:12780 LF.Tactics <> f_equal thm
R12774:12780 LF.Tactics <> f_equal thm
prf 13226:13247 <> eq_implies_succ_equal'
R13265:13267 Coq.Init.Datatypes <> nat ind
binder 13259:13259 <> n:74
binder 13261:13261 <> m:75
R13278:13281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13274:13276 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13273:13273 LF.Tactics <> n:74 var
R13277:13277 LF.Tactics <> m:75 var
R13285:13287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13282:13282 Coq.Init.Datatypes <> S constr
R13284:13284 LF.Tactics <> n:74 var
R13288:13288 Coq.Init.Datatypes <> S constr
R13290:13290 LF.Tactics <> m:75 var
prf 13773:13777 <> S_inj
R13795:13797 Coq.Init.Datatypes <> nat ind
binder 13789:13789 <> n:76
binder 13791:13791 <> m:77
R13805:13808 LF.Basics <> bool ind
binder 13801:13801 <> b:78
R13834:13840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13814:13814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13829:13832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13815:13815 LF.Basics <> ::nat_scope:x_'=?'_x not
R13819:13824 LF.Basics <> ::nat_scope:x_'=?'_x not
R13828:13828 LF.Basics <> ::nat_scope:x_'=?'_x not
R13816:13816 Coq.Init.Datatypes <> S constr
R13818:13818 LF.Tactics <> n:76 var
R13825:13825 Coq.Init.Datatypes <> S constr
R13827:13827 LF.Tactics <> m:77 var
R13833:13833 LF.Tactics <> b:78 var
R13841:13841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13848:13851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13843:13846 LF.Basics <> ::nat_scope:x_'=?'_x not
R13842:13842 LF.Tactics <> n:76 var
R13847:13847 LF.Tactics <> m:77 var
R13852:13852 LF.Tactics <> b:78 var
prf 14683:14688 <> silly4
R14710:14712 Coq.Init.Datatypes <> nat ind
binder 14700:14700 <> n:79
binder 14702:14702 <> m:80
binder 14704:14704 <> p:81
binder 14706:14706 <> q:82
R14718:14718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14733:14739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14724:14727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14720:14722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14719:14719 LF.Tactics <> n:79 var
R14723:14723 LF.Tactics <> m:80 var
R14729:14731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14728:14728 LF.Tactics <> p:81 var
R14732:14732 LF.Tactics <> q:82 var
R14745:14750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14741:14743 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14740:14740 LF.Tactics <> m:80 var
R14744:14744 LF.Tactics <> n:79 var
R14752:14754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14751:14751 LF.Tactics <> q:82 var
R14755:14755 LF.Tactics <> p:81 var
prf 16065:16082 <> specialize_example
binder 16092:16092 <> n:83
R16100:16100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16118:16124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 16108:16108 <> m:84
R16114:16116 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16112:16112 LF.Basics <> ::nat_scope:x_'*'_x not
R16111:16111 LF.Tactics <> m:84 var
R16113:16113 LF.Tactics <> n:83 var
R16126:16128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16125:16125 LF.Tactics <> n:83 var
R16193:16200 LF.Induction <> mult_1_l thm
R16193:16200 LF.Induction <> mult_1_l thm
R16193:16200 LF.Induction <> mult_1_l thm
def 16343:16361 <> trans_eq_example'''
R16387:16389 Coq.Init.Datatypes <> nat ind
binder 16373:16373 <> a:85
binder 16375:16375 <> b:86
binder 16377:16377 <> c:87
binder 16379:16379 <> d:88
binder 16381:16381 <> e:89
binder 16383:16383 <> f:90
R16411:16419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16403:16405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16398:16398 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16400:16400 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16402:16402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16399:16399 LF.Tactics <> a:85 var
R16401:16401 LF.Tactics <> b:86 var
R16406:16406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16408:16408 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16410:16410 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16407:16407 LF.Tactics <> c:87 var
R16409:16409 LF.Tactics <> d:88 var
R16433:16441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16425:16427 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16420:16420 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16422:16422 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16424:16424 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16421:16421 LF.Tactics <> c:87 var
R16423:16423 LF.Tactics <> d:88 var
R16428:16428 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16430:16430 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16432:16432 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16429:16429 LF.Tactics <> e:89 var
R16431:16431 LF.Tactics <> f:90 var
R16447:16449 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16442:16442 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16444:16444 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16446:16446 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16443:16443 LF.Tactics <> a:85 var
R16445:16445 LF.Tactics <> b:86 var
R16450:16450 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16452:16452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16454:16454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16451:16451 LF.Tactics <> e:89 var
R16453:16453 LF.Tactics <> f:90 var
R16525:16525 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16527:16527 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16529:16529 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16507:16514 LF.Tactics <> trans_eq thm
R16525:16525 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16527:16527 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16529:16529 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16507:16514 LF.Tactics <> trans_eq thm
prf 17729:17751 <> double_injective_FAILED
binder 17762:17762 <> n:91
binder 17764:17764 <> m:92
R17788:17793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17777:17779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17769:17774 LF.Induction <> double def
R17776:17776 LF.Tactics <> n:91 var
R17780:17785 LF.Induction <> double def
R17787:17787 LF.Tactics <> m:92 var
R17795:17797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17794:17794 LF.Tactics <> n:91 var
R17798:17798 LF.Tactics <> m:92 var
prf 20435:20450 <> double_injective
binder 20461:20461 <> n:93
binder 20463:20463 <> m:94
R20487:20492 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20476:20478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20468:20473 LF.Induction <> double def
R20475:20475 LF.Tactics <> n:93 var
R20479:20484 LF.Induction <> double def
R20486:20486 LF.Tactics <> m:94 var
R20494:20496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20493:20493 LF.Tactics <> n:93 var
R20497:20497 LF.Tactics <> m:94 var
prf 22421:22428 <> eqb_true
binder 22439:22439 <> n:95
binder 22441:22441 <> m:96
R22459:22462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22452:22454 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22447:22450 LF.Basics <> ::nat_scope:x_'=?'_x not
R22446:22446 LF.Tactics <> n:95 var
R22451:22451 LF.Tactics <> m:96 var
R22455:22458 LF.Basics <> true constr
R22464:22466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22463:22463 LF.Tactics <> n:95 var
R22467:22467 LF.Tactics <> m:96 var
R22571:22586 LF.Tactics <> discriminate_ex1 thm
R22571:22586 LF.Tactics <> discriminate_ex1 thm
R22624:22639 LF.Tactics <> discriminate_ex1 thm
R22624:22639 LF.Tactics <> discriminate_ex1 thm
def 23022:23052 <> manual_grade_for_informal_proof
R23056:23061 Coq.Init.Datatypes <> option ind
R23067:23067 LF.Poly <> ::type_scope:x_'*'_x not
R23064:23066 Coq.Init.Datatypes <> nat ind
R23068:23073 Coq.Strings.String <> string ind
R23079:23082 Coq.Init.Datatypes <> None constr
prf 23320:23337 <> plus_n_n_injective
binder 23348:23348 <> n:97
binder 23350:23350 <> m:98
R23368:23373 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23360:23362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23356:23358 LF.Basics <> ::nat_scope:x_'+'_x not
R23355:23355 LF.Tactics <> n:97 var
R23359:23359 LF.Tactics <> n:97 var
R23364:23366 LF.Basics <> ::nat_scope:x_'+'_x not
R23363:23363 LF.Tactics <> m:98 var
R23367:23367 LF.Tactics <> m:98 var
R23375:23377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23374:23374 LF.Tactics <> n:97 var
R23378:23378 LF.Tactics <> m:98 var
R23649:23657 LF.Induction <> plus_n_Sm thm
R23649:23657 LF.Induction <> plus_n_Sm thm
R23649:23657 LF.Induction <> plus_n_Sm thm
R23678:23686 LF.Induction <> plus_n_Sm thm
R23678:23686 LF.Induction <> plus_n_Sm thm
R23678:23686 LF.Induction <> plus_n_Sm thm
prf 24118:24146 <> double_injective_take2_FAILED
binder 24157:24157 <> n:99
binder 24159:24159 <> m:100
R24183:24188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24172:24174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24164:24169 LF.Induction <> double def
R24171:24171 LF.Tactics <> n:99 var
R24175:24180 LF.Induction <> double def
R24182:24182 LF.Tactics <> m:100 var
R24190:24192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24189:24189 LF.Tactics <> n:99 var
R24193:24193 LF.Tactics <> m:100 var
prf 25433:25454 <> double_injective_take2
binder 25465:25465 <> n:101
binder 25467:25467 <> m:102
R25491:25496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25480:25482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25472:25477 LF.Induction <> double def
R25479:25479 LF.Tactics <> n:101 var
R25483:25488 LF.Induction <> double def
R25490:25490 LF.Tactics <> m:102 var
R25498:25500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25497:25497 LF.Tactics <> n:101 var
R25501:25501 LF.Tactics <> m:102 var
prf 28113:28132 <> nth_error_after_last
R28147:28149 Coq.Init.Datatypes <> nat ind
binder 28143:28143 <> n:103
binder 28153:28153 <> X:104
R28168:28171 LF.Poly <> list ind
R28173:28173 LF.Tactics <> X:104 var
binder 28164:28164 <> l:105
R28191:28196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28187:28189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28179:28184 LF.Poly <> length def
R28186:28186 LF.Tactics <> l:105 var
R28190:28190 LF.Tactics <> n:103 var
R28210:28212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28197:28205 LF.Poly <> nth_error def
R28209:28209 LF.Tactics <> n:103 var
R28207:28207 LF.Tactics <> l:105 var
R28213:28216 Coq.Init.Datatypes <> None constr
def 28777:28782 <> square
binder 28784:28784 <> n:106
R28790:28792 LF.Basics <> ::nat_scope:x_'*'_x not
R28789:28789 LF.Tactics <> n:106 var
R28793:28793 LF.Tactics <> n:106 var
prf 28863:28873 <> square_mult
binder 28884:28884 <> n:107
binder 28886:28886 <> m:108
R28903:28905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28889:28894 LF.Tactics <> square def
R28898:28900 LF.Basics <> ::nat_scope:x_'*'_x not
R28897:28897 LF.Tactics <> n:107 var
R28901:28901 LF.Tactics <> m:108 var
R28914:28916 LF.Basics <> ::nat_scope:x_'*'_x not
R28906:28911 LF.Tactics <> square def
R28913:28913 LF.Tactics <> n:107 var
R28917:28922 LF.Tactics <> square def
R28924:28924 LF.Tactics <> m:108 var
R29238:29243 LF.Tactics <> square def
R29562:29571 LF.Induction <> mult_assoc thm
R29562:29571 LF.Induction <> mult_assoc thm
R29562:29571 LF.Induction <> mult_assoc thm
R29597:29599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29593:29595 LF.Basics <> ::nat_scope:x_'*'_x not
R29589:29591 LF.Basics <> ::nat_scope:x_'*'_x not
R29605:29607 LF.Basics <> ::nat_scope:x_'*'_x not
R29601:29603 LF.Basics <> ::nat_scope:x_'*'_x not
R29597:29599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29593:29595 LF.Basics <> ::nat_scope:x_'*'_x not
R29589:29591 LF.Basics <> ::nat_scope:x_'*'_x not
R29605:29607 LF.Basics <> ::nat_scope:x_'*'_x not
R29601:29603 LF.Basics <> ::nat_scope:x_'*'_x not
R29626:29633 LF.Induction <> mul_comm thm
R29626:29633 LF.Induction <> mul_comm thm
R29626:29633 LF.Induction <> mul_comm thm
R29642:29651 LF.Induction <> mult_assoc thm
R29642:29651 LF.Induction <> mult_assoc thm
R29677:29686 LF.Induction <> mult_assoc thm
R29677:29686 LF.Induction <> mult_assoc thm
R29677:29686 LF.Induction <> mult_assoc thm
def 30073:30075 <> foo
R30081:30083 Coq.Init.Datatypes <> nat ind
binder 30078:30078 <> x:109
prf 30300:30311 <> silly_fact_1
binder 30322:30322 <> m:110
R30334:30336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30330:30332 LF.Basics <> ::nat_scope:x_'+'_x not
R30325:30327 LF.Tactics <> foo def
R30329:30329 LF.Tactics <> m:110 var
R30348:30350 LF.Basics <> ::nat_scope:x_'+'_x not
R30337:30339 LF.Tactics <> foo def
R30343:30345 LF.Basics <> ::nat_scope:x_'+'_x not
R30342:30342 LF.Tactics <> m:110 var
def 30578:30580 <> bar
binder 30582:30582 <> x:111
R30595:30595 LF.Tactics <> x:111 var
R30606:30606 Coq.Init.Datatypes <> O constr
R30617:30617 Coq.Init.Datatypes <> S constr
prf 30691:30709 <> silly_fact_2_FAILED
binder 30720:30720 <> m:113
R30732:30734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30728:30730 LF.Basics <> ::nat_scope:x_'+'_x not
R30723:30725 LF.Tactics <> bar def
R30727:30727 LF.Tactics <> m:113 var
R30746:30748 LF.Basics <> ::nat_scope:x_'+'_x not
R30735:30737 LF.Tactics <> bar def
R30741:30743 LF.Basics <> ::nat_scope:x_'+'_x not
R30740:30740 LF.Tactics <> m:113 var
prf 31735:31746 <> silly_fact_2
binder 31757:31757 <> m:114
R31769:31771 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31765:31767 LF.Basics <> ::nat_scope:x_'+'_x not
R31760:31762 LF.Tactics <> bar def
R31764:31764 LF.Tactics <> m:114 var
R31783:31785 LF.Basics <> ::nat_scope:x_'+'_x not
R31772:31774 LF.Tactics <> bar def
R31778:31780 LF.Basics <> ::nat_scope:x_'+'_x not
R31777:31777 LF.Tactics <> m:114 var
prf 32133:32145 <> silly_fact_2'
binder 32156:32156 <> m:115
R32168:32170 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32164:32166 LF.Basics <> ::nat_scope:x_'+'_x not
R32159:32161 LF.Tactics <> bar def
R32163:32163 LF.Tactics <> m:115 var
R32182:32184 LF.Basics <> ::nat_scope:x_'+'_x not
R32171:32173 LF.Tactics <> bar def
R32177:32179 LF.Basics <> ::nat_scope:x_'+'_x not
R32176:32176 LF.Tactics <> m:115 var
R32216:32218 LF.Tactics <> bar def
def 32863:32870 <> sillyfun
R32877:32879 Coq.Init.Datatypes <> nat ind
binder 32873:32873 <> n:116
R32884:32887 LF.Basics <> bool ind
R32898:32901 LF.Basics <> ::nat_scope:x_'=?'_x not
R32897:32897 LF.Tactics <> n:116 var
R32926:32929 LF.Basics <> ::nat_scope:x_'=?'_x not
R32925:32925 LF.Tactics <> n:116 var
R32950:32954 LF.Basics <> false constr
R32937:32941 LF.Basics <> false constr
R32909:32913 LF.Basics <> false constr
prf 32966:32979 <> sillyfun_false
R32995:32997 Coq.Init.Datatypes <> nat ind
binder 32991:32991 <> n:117
R33013:33015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33003:33010 LF.Tactics <> sillyfun def
R33012:33012 LF.Tactics <> n:117 var
R33016:33020 LF.Basics <> false constr
R33049:33056 LF.Tactics <> sillyfun def
R33072:33075 LF.Basics <> ::nat_scope:x_'=?'_x not
R33072:33075 LF.Basics <> ::nat_scope:x_'=?'_x not
R33164:33167 LF.Basics <> ::nat_scope:x_'=?'_x not
R33164:33167 LF.Basics <> ::nat_scope:x_'=?'_x not
def 34040:34044 <> split
binder 34047:34047 <> X:118
binder 34049:34049 <> Y:119
R34064:34067 LF.Poly <> list ind
R34071:34071 LF.Poly <> ::type_scope:x_'*'_x not
R34070:34070 LF.Tactics <> X:118 var
R34072:34072 LF.Tactics <> Y:119 var
binder 34060:34060 <> l:120
R34093:34093 LF.Poly <> ::type_scope:x_'*'_x not
R34100:34104 LF.Poly <> ::type_scope:x_'*'_x not
R34111:34111 LF.Poly <> ::type_scope:x_'*'_x not
R34094:34097 LF.Poly <> list ind
R34099:34099 LF.Tactics <> X:118 var
R34105:34108 LF.Poly <> list ind
R34110:34110 LF.Tactics <> Y:119 var
R34124:34124 LF.Tactics <> l:120 var
R34135:34136 LF.Poly <> :::'['_']' not
R34141:34141 LF.Poly <> :::'('_x_','_x_')' not
R34144:34145 LF.Poly <> :::'('_x_','_x_')' not
R34148:34148 LF.Poly <> :::'('_x_','_x_')' not
R34142:34143 LF.Poly <> :::'['_']' not
R34146:34147 LF.Poly <> :::'['_']' not
R34160:34163 LF.Poly <> :::x_'::'_x not
R34154:34154 LF.Poly <> :::'('_x_','_x_')' not
R34156:34157 LF.Poly <> :::'('_x_','_x_')' not
R34159:34159 LF.Poly <> :::'('_x_','_x_')' not
R34181:34185 LF.Tactics <> split:121 def
R34202:34202 LF.Poly <> :::'('_x_','_x_')' not
R34205:34206 LF.Poly <> :::'('_x_','_x_')' not
R34209:34209 LF.Poly <> :::'('_x_','_x_')' not
R34214:34214 LF.Poly <> :::'('_x_','_x_')' not
R34222:34223 LF.Poly <> :::'('_x_','_x_')' not
R34231:34231 LF.Poly <> :::'('_x_','_x_')' not
R34216:34219 LF.Poly <> :::x_'::'_x not
R34225:34228 LF.Poly <> :::x_'::'_x not
prf 34345:34357 <> combine_split
binder 34368:34368 <> X:123
binder 34370:34370 <> Y:124
R34377:34380 LF.Poly <> list ind
R34384:34386 LF.Poly <> ::type_scope:x_'*'_x not
R34383:34383 LF.Tactics <> X:123 var
R34387:34387 LF.Tactics <> Y:124 var
binder 34373:34373 <> l:125
binder 34391:34392 <> l1:126
binder 34394:34395 <> l2:127
R34418:34423 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34407:34409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34400:34404 LF.Tactics <> split def
R34406:34406 LF.Tactics <> l:125 var
R34410:34410 LF.Poly <> :::'('_x_','_x_')' not
R34413:34414 LF.Poly <> :::'('_x_','_x_')' not
R34417:34417 LF.Poly <> :::'('_x_','_x_')' not
R34411:34412 LF.Tactics <> l1:126 var
R34415:34416 LF.Tactics <> l2:127 var
R34437:34439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34424:34430 LF.Poly <> combine def
R34435:34436 LF.Tactics <> l2:127 var
R34432:34433 LF.Tactics <> l1:126 var
R34440:34440 LF.Tactics <> l:125 var
R34585:34589 LF.Tactics <> split def
R34585:34589 LF.Tactics <> split def
R34635:34641 LF.Tactics <> f_equal thm
R34635:34641 LF.Tactics <> f_equal thm
def 35183:35191 <> sillyfun1
R35198:35200 Coq.Init.Datatypes <> nat ind
binder 35194:35194 <> n:128
R35205:35208 LF.Basics <> bool ind
R35219:35222 LF.Basics <> ::nat_scope:x_'=?'_x not
R35218:35218 LF.Tactics <> n:128 var
R35246:35249 LF.Basics <> ::nat_scope:x_'=?'_x not
R35245:35245 LF.Tactics <> n:128 var
R35269:35273 LF.Basics <> false constr
R35257:35260 LF.Basics <> true constr
R35230:35233 LF.Basics <> true constr
prf 35468:35487 <> sillyfun1_odd_FAILED
R35503:35505 Coq.Init.Datatypes <> nat ind
binder 35499:35499 <> n:129
R35529:35534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35522:35524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35511:35519 LF.Tactics <> sillyfun1 def
R35521:35521 LF.Tactics <> n:129 var
R35525:35528 LF.Basics <> true constr
R35540:35542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35535:35537 LF.Basics <> odd def
R35539:35539 LF.Tactics <> n:129 var
R35543:35546 LF.Basics <> true constr
R35578:35586 LF.Tactics <> sillyfun1 def
R35608:35611 LF.Basics <> ::nat_scope:x_'=?'_x not
R35608:35611 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 36429:36441 <> sillyfun1_odd
R36457:36459 Coq.Init.Datatypes <> nat ind
binder 36453:36453 <> n:130
R36483:36488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36476:36478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36465:36473 LF.Tactics <> sillyfun1 def
R36475:36475 LF.Tactics <> n:130 var
R36479:36482 LF.Basics <> true constr
R36494:36496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36489:36491 LF.Basics <> odd def
R36493:36493 LF.Tactics <> n:130 var
R36497:36500 LF.Basics <> true constr
R36532:36540 LF.Tactics <> sillyfun1 def
R36562:36565 LF.Basics <> ::nat_scope:x_'=?'_x not
R36562:36565 LF.Basics <> ::nat_scope:x_'=?'_x not
R36815:36822 LF.Tactics <> eqb_true thm
R36815:36822 LF.Tactics <> eqb_true thm
R37117:37120 LF.Basics <> ::nat_scope:x_'=?'_x not
R37117:37120 LF.Basics <> ::nat_scope:x_'=?'_x not
R37177:37184 LF.Tactics <> eqb_true thm
R37177:37184 LF.Tactics <> eqb_true thm
prf 37360:37381 <> bool_fn_applied_thrice
R37403:37406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37399:37402 LF.Basics <> bool ind
R37407:37410 LF.Basics <> bool ind
binder 37395:37395 <> f:131
R37418:37421 LF.Basics <> bool ind
binder 37414:37414 <> b:132
R37438:37440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37427:37427 LF.Tactics <> f:131 var
R37430:37430 LF.Tactics <> f:131 var
R37433:37433 LF.Tactics <> f:131 var
R37435:37435 LF.Tactics <> b:132 var
R37441:37441 LF.Tactics <> f:131 var
R37443:37443 LF.Tactics <> b:132 var
R37497:37500 LF.Basics <> true constr
R37497:37500 LF.Basics <> true constr
R37575:37579 LF.Basics <> false constr
R37575:37579 LF.Basics <> false constr
R37677:37681 LF.Basics <> false constr
R37677:37681 LF.Basics <> false constr
R37709:37712 LF.Basics <> true constr
R37709:37712 LF.Basics <> true constr
prf 40459:40465 <> eqb_sym
R40483:40485 Coq.Init.Datatypes <> nat ind
binder 40477:40477 <> n:133
binder 40479:40479 <> m:134
R40491:40491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40498:40502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40509:40509 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40493:40496 LF.Basics <> ::nat_scope:x_'=?'_x not
R40492:40492 LF.Tactics <> n:133 var
R40497:40497 LF.Tactics <> m:134 var
R40504:40507 LF.Basics <> ::nat_scope:x_'=?'_x not
R40503:40503 LF.Tactics <> m:134 var
R40508:40508 LF.Tactics <> n:133 var
R40546:40549 LF.Basics <> ::nat_scope:x_'=?'_x not
R40546:40549 LF.Basics <> ::nat_scope:x_'=?'_x not
R40595:40602 LF.Tactics <> eqb_true thm
R40595:40602 LF.Tactics <> eqb_true thm
R40630:40637 LF.Induction <> eqb_refl thm
R40630:40637 LF.Induction <> eqb_refl thm
prf 41247:41255 <> eqb_trans
binder 41266:41266 <> n:135
binder 41268:41268 <> m:136
binder 41270:41270 <> p:137
R41288:41293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41281:41283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41276:41279 LF.Basics <> ::nat_scope:x_'=?'_x not
R41275:41275 LF.Tactics <> n:135 var
R41280:41280 LF.Tactics <> m:136 var
R41284:41287 LF.Basics <> true constr
R41307:41312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41300:41302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41295:41298 LF.Basics <> ::nat_scope:x_'=?'_x not
R41294:41294 LF.Tactics <> m:136 var
R41299:41299 LF.Tactics <> p:137 var
R41303:41306 LF.Basics <> true constr
R41319:41321 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41314:41317 LF.Basics <> ::nat_scope:x_'=?'_x not
R41313:41313 LF.Tactics <> n:135 var
R41318:41318 LF.Tactics <> p:137 var
R41322:41325 LF.Basics <> true constr
R41367:41374 LF.Tactics <> eqb_true thm
R41367:41374 LF.Tactics <> eqb_true thm
R41390:41397 LF.Tactics <> eqb_true thm
R41390:41397 LF.Tactics <> eqb_true thm
R41449:41456 LF.Induction <> eqb_refl thm
R41449:41456 LF.Induction <> eqb_refl thm
def 42001:42023 <> split_combine_statement
binder 42136:42136 <> X:138
binder 42138:42138 <> Y:139
R42146:42149 LF.Poly <> list ind
R42151:42151 LF.Tactics <> X:138 var
binder 42141:42142 <> l1:140
R42160:42163 LF.Poly <> list ind
R42165:42165 LF.Tactics <> Y:139 var
binder 42155:42156 <> l2:141
R42190:42193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42178:42180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42169:42174 LF.Poly <> length def
R42176:42177 LF.Tactics <> l1:140 var
R42181:42186 LF.Poly <> length def
R42188:42189 LF.Tactics <> l2:141 var
R42215:42217 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42194:42198 LF.Tactics <> split def
R42201:42207 LF.Poly <> combine def
R42212:42213 LF.Tactics <> l2:141 var
R42209:42210 LF.Tactics <> l1:140 var
R42218:42218 LF.Poly <> :::'('_x_','_x_')' not
R42221:42222 LF.Poly <> :::'('_x_','_x_')' not
R42225:42225 LF.Poly <> :::'('_x_','_x_')' not
R42219:42220 LF.Tactics <> l1:140 var
R42223:42224 LF.Tactics <> l2:141 var
prf 42241:42253 <> split_combine
R42257:42279 LF.Tactics <> split_combine_statement def
def 42617:42646 <> manual_grade_for_split_combine
R42650:42655 Coq.Init.Datatypes <> option ind
R42661:42661 LF.Poly <> ::type_scope:x_'*'_x not
R42658:42660 Coq.Init.Datatypes <> nat ind
R42662:42667 Coq.Strings.String <> string ind
R42673:42676 Coq.Init.Datatypes <> None constr
prf 42756:42770 <> filter_exercise
binder 42782:42782 <> X:142
R42801:42804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42800:42800 LF.Tactics <> X:142 var
R42805:42808 LF.Basics <> bool ind
binder 42793:42796 <> test:143
R42849:42849 LF.Tactics <> X:142 var
binder 42845:42845 <> x:144
R42860:42863 LF.Poly <> list ind
R42865:42865 LF.Tactics <> X:142 var
binder 42853:42853 <> l:145
binder 42855:42856 <> lf:146
R42894:42899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42884:42886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42871:42876 LF.Poly <> filter def
R42883:42883 LF.Tactics <> l:145 var
R42878:42881 LF.Tactics <> test:143 var
R42888:42891 LF.Poly <> :::x_'::'_x not
R42887:42887 LF.Tactics <> x:144 var
R42892:42893 LF.Tactics <> lf:146 var
R42906:42908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42900:42903 LF.Tactics <> test:143 var
R42905:42905 LF.Tactics <> x:144 var
R42909:42912 LF.Basics <> true constr
R43024:43027 LF.Poly <> :::x_'::'_x not
R43024:43027 LF.Poly <> :::x_'::'_x not
def 44097:44103 <> forallb
binder 44106:44106 <> X:147
R44125:44128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44124:44124 LF.Tactics <> X:147 var
R44129:44132 LF.Basics <> bool ind
binder 44117:44120 <> test:148
R44140:44143 LF.Poly <> list ind
R44145:44145 LF.Tactics <> X:147 var
binder 44136:44136 <> l:149
R44150:44153 LF.Basics <> bool ind
R44166:44166 LF.Tactics <> l:149 var
R44180:44181 LF.Poly <> :::'['_']' not
R44186:44189 LF.Basics <> true constr
R44199:44202 LF.Poly <> :::x_'::'_x not
R44211:44214 LF.Tactics <> test:148 var
R44249:44253 LF.Basics <> false constr
R44223:44229 LF.Tactics <> forallb:150 def
R44231:44234 LF.Tactics <> test:148 var
def 44274:44287 <> test_forallb_1
R44314:44316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44291:44297 LF.Tactics <> forallb def
R44303:44303 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44305:44305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44307:44307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44309:44309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44311:44311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44313:44313 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44299:44301 LF.Basics <> odd def
R44317:44320 LF.Basics <> true constr
def 44357:44370 <> test_forallb_2
R44400:44402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44374:44380 LF.Tactics <> forallb def
R44387:44387 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44393:44393 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44399:44399 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44388:44392 LF.Basics <> false constr
R44394:44398 LF.Basics <> false constr
R44382:44385 LF.Basics <> negb def
R44403:44406 LF.Basics <> true constr
def 44443:44456 <> test_forallb_3
R44482:44484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44460:44466 LF.Tactics <> forallb def
R44473:44473 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44475:44475 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44477:44477 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44479:44479 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44481:44481 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44468:44471 LF.Basics <> even def
R44485:44489 LF.Basics <> false constr
def 44526:44539 <> test_forallb_4
R44561:44563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44543:44549 LF.Tactics <> forallb def
R44559:44560 LF.Poly <> :::'['_']' not
R44552:44554 LF.Basics <> eqb def
R44564:44567 LF.Basics <> true constr
def 44605:44611 <> existsb
binder 44614:44614 <> X:152
R44633:44636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44632:44632 LF.Tactics <> X:152 var
R44637:44640 LF.Basics <> bool ind
binder 44625:44628 <> test:153
R44648:44651 LF.Poly <> list ind
R44653:44653 LF.Tactics <> X:152 var
binder 44644:44644 <> l:154
R44658:44661 LF.Basics <> bool ind
R44674:44674 LF.Tactics <> l:154 var
R44688:44689 LF.Poly <> :::'['_']' not
R44694:44698 LF.Basics <> false constr
R44708:44711 LF.Poly <> :::x_'::'_x not
R44720:44723 LF.Tactics <> test:153 var
R44749:44755 LF.Tactics <> existsb:155 def
R44757:44760 LF.Tactics <> test:153 var
R44732:44735 LF.Basics <> true constr
def 44780:44793 <> test_existsb_1
R44822:44824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44797:44803 LF.Tactics <> existsb def
R44813:44813 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44815:44815 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44817:44817 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44819:44819 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44821:44821 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44806:44808 LF.Basics <> eqb def
R44825:44829 LF.Basics <> false constr
def 44873:44886 <> test_existsb_2
R44927:44929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44890:44896 LF.Tactics <> existsb def
R44910:44910 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44915:44915 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44920:44920 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44926:44926 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44911:44914 LF.Basics <> true constr
R44916:44919 LF.Basics <> true constr
R44921:44925 LF.Basics <> false constr
R44899:44902 LF.Basics <> andb def
R44904:44907 LF.Basics <> true constr
R44930:44933 LF.Basics <> true constr
def 44970:44983 <> test_existsb_3
R45012:45014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44987:44993 LF.Tactics <> existsb def
R44999:44999 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45001:45001 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45003:45003 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45005:45005 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45007:45007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45009:45009 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45011:45011 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44995:44997 LF.Basics <> odd def
R45015:45018 LF.Basics <> true constr
def 45055:45068 <> test_existsb_4
R45087:45089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45072:45078 LF.Tactics <> existsb def
R45085:45086 LF.Poly <> :::'['_']' not
R45080:45083 LF.Basics <> even def
R45090:45094 LF.Basics <> false constr
def 45134:45141 <> existsb'
binder 45144:45144 <> X:157
R45163:45166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45162:45162 LF.Tactics <> X:157 var
R45167:45170 LF.Basics <> bool ind
binder 45155:45158 <> test:158
R45178:45181 LF.Poly <> list ind
R45183:45183 LF.Tactics <> X:157 var
binder 45174:45174 <> l:159
R45188:45191 LF.Basics <> bool ind
R45198:45201 LF.Basics <> negb def
R45204:45210 LF.Tactics <> forallb def
R45237:45237 LF.Tactics <> l:159 var
binder 45217:45217 <> x:160
R45222:45225 LF.Basics <> negb def
R45228:45231 LF.Tactics <> test:158 var
R45233:45233 LF.Tactics <> x:160 var
prf 45250:45265 <> existsb_existsb'
binder 45277:45277 <> X:161
R45296:45299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45295:45295 LF.Tactics <> X:161 var
R45300:45303 LF.Basics <> bool ind
binder 45288:45291 <> test:162
R45311:45314 LF.Poly <> list ind
R45316:45316 LF.Tactics <> X:161 var
binder 45307:45307 <> l:163
R45336:45338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45322:45328 LF.Tactics <> existsb def
R45335:45335 LF.Tactics <> l:163 var
R45330:45333 LF.Tactics <> test:162 var
R45339:45346 LF.Tactics <> existsb' def
R45353:45353 LF.Tactics <> l:163 var
R45348:45351 LF.Tactics <> test:162 var
R45445:45452 LF.Tactics <> existsb' def
